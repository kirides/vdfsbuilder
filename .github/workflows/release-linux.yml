name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
        go-version: [1.22]

    name: Build & Release ${{ matrix.go-version }} (${{ matrix.os }} ${{ matrix.arch }})

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: try building
        run: go build -v ./...

      - name: Setup final build env
        run: |
          export tagName=${GITHUB_REF/refs\/tags\//}
          echo "Tag: ${tagName}"
          echo "RELEASE_VERSION=${tagName}" >> $GITHUB_ENV
          echo "GOARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "GOOS=${{ matrix.os }}" >> $GITHUB_ENV

      - name: Build Windows
        if: matrix.os == 'windows'
        run: |
          export RELEASE_FILE=vdfsbuilder.$GOOS-$GOARCH.exe
          echo "RELEASE_FILE=$RELEASE_FILE" >> $GITHUB_ENV
          go build -v -o $RELEASE_FILE -trimpath -ldflags "-s -w" ./cmd/vdfsbuilder

      - name: Build linux
        if: matrix.os != 'windows'
        run: |
          export RELEASE_FILE=vdfsbuilder.$GOOS-$GOARCH
          echo "RELEASE_FILE=$RELEASE_FILE" >> $GITHUB_ENV
          go build -v -o $RELEASE_FILE -trimpath -ldflags '-extldflags "-static" -s -w' ./cmd/vdfsbuilder

      - name: Calculate distribution hash
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          sha256sum "$RELEASE_FILE" > "$RELEASE_FILE.sha256"
          cat "$RELEASE_FILE.sha256"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.RELEASE_FILE }}.zip
          path: |
            ${{ env.RELEASE_FILE }}
            ${{ env.RELEASE_FILE }}.sha256

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Collect artifacts
        uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        run: ls -R

      - name: Setup tag
        run: |
          export tagName=${GITHUB_REF/refs\/tags\//}
          echo "Tag: ${tagName}"
          echo "RELEASE_VERSION=${tagName}" >> $GITHUB_ENV

      - name: Create github release
        run: |
          gh release create $RELEASE_VERSION --generate-notes vdfsbuilder.*.zip/*
          exit 0
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
